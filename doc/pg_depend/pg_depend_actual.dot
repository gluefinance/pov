digraph pg_depend {
    "schema public" -> "table t1"
    "table t1" -> "constraint t1_pkey" [type=a]

    "schema public" -> "function f1(integer)"
    "schema public" -> "sequence s1"

    "table t1" -> "table t2"
    "table t2" -> "constraint t2_pkey" [type=a]

    "function f1(integer)" -> "table t3"
    "function f1(integer)" -> "constraint t3_id_check on table t3" [type=a]

    "table t3" -> "constraint t3_pkey"
    "table t3" -> "constraint t3_pkey"
    "table t3" -> "constraint t3_pkey"
    "table t3" -> "constraint t3_pkey"


    "table t1" -> "view v1"
    "table t2" -> "view v2"

    "view v1" -> "view v3"
    "view v2" -> "view v3"

    "view v3" -> "view v4"
    "function f1(integer)" -> "view v4"
}


-- Dependency level 1 (directly under public schema:)
CREATE TABLE t1 ( id integer, PRIMARY KEY (id) );
CREATE FUNCTION f1 ( integer ) RETURNS boolean AS $$ SELECT $1 > 1; $$ LANGUAGE sql;
CREATE SEQUENCE s1;

-- Dependency level 2:
CREATE TABLE t2 ( id integer, PRIMARY KEY (id), FOREIGN KEY (id) REFERENCES t1(id) );
CREATE TABLE t3 ( id integer not null default nextval('s1'), PRIMARY KEY (id), CHECK(f1(id)) );

-- Dependency level 3:
CREATE VIEW v1 AS SELECT * FROM t1;
CREATE VIEW v2 AS SELECT * FROM t2;

-- Dependency level 4:
CREATE VIEW v3 AS SELECT v1.id AS id1, v2.id AS id2 FROM v1, v2;

-- Dependency level 5:
CREATE VIEW v4 AS SELECT *, f1(id1) FROM v3;
